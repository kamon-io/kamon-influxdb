kamon {
  opentsdb {

    direct {
      # Zookeeper quorom.  If not empty the plugin will commit directly to the OpenTSDB hbase tables
      #quorum = "cv-dvhmanager01.cv.scrum:2181"
      quorum = ""
    }

    // Default values that will be used for all metrics unless overriden by metric or category specific criteria
    default {
      // A List of rules used to generate the metric name
      // These values must match an entry in "kamon.opentsdb.rules"
      name = [category, entity, metric, stat]

      // A mapping of tag name to "rule"
      // These values must match an entry in "kamon.opentsdb.rules"
      tags = {app = application, host = host}

      // The stats to generate for each metric.
      // These values are matched against the patterns in "kamon.opentsdb.stats" to determine how the stat is computed.
      // Values that cannot be computed will be ignored (ex. "mean" for a counter)
      stats = [ count, rate, min, max, median, mean, 90, 99 ]

      // The resolution of the timestamp of the generated stats.  "seconds" or "milliseconds"
      timestamp = seconds
    }

    // Category specific overrides to the defaults
    // For basic instruments we remove the entity evaluation from the name because is doesn't add anything
    category {
      histogram.name = [ category, entity, stat ]
      min-max-counter.name = [ category, entity, stat ]
      gauge.name = [ category, entity, stat ]
      counter.name = [ category, entity, stat ]
    }

    // The default values can be overriden for an individual metric
    metrics {
      "example.metric.name" = {
        name = [ metric, stat ]
        tags = {}
        stats = [ 90, 99, 99.5, 99.9, max ]
        timestamp = milliseconds
      }
    }

    // Naming rules used to calculate metric names and tag values
    // A rule can either have a "generator", which is the full qualified class name of an implementation of "kamon.opentsdb.Rule"
    // or it van have a "value", which is string
    rules {
      application.value = ""
      host.generator = "kamon.opentsdb.HostnameRule"
      category.generator = "kamon.opentsdb.CategoryRule"
      entity.generator = "kamon.opentsdb.EntityRule"
      metric.generator = "kamon.opentsdb.MetricRule"
      stat.generator = "kamon.opentsdb.StatRule"
    }

    // Statistics that can be generated for a metric.
    // The keys are regular expressions that when matched will calculate a value using an instance
    // of the qualified class name that is an implementation of "kamon.opentsdb.Stat"
    stats {
      "count" = "kamon.opentsdb.CountStat"
      "rate" = "kamon.opentsdb.RateStat"
      "min" = "kamon.opentsdb.MinStat"
      "max" = "kamon.opentsdb.MaxStat"
      "mean" = "kamon.opentsdb.MeanStat"
      "median" = "kamon.opentsdb.MedianStat"
      "\\d*\\.?\\d+" = "kamon.opentsdb.PercentileStat"
    }

    // Configuration that controls the generation of metric names
    name {
      // A string that is inserted between each "rule" in the metric name
      separator = "/"
      // A list of regex replacements to apply to the results of each "rule"
      normalizers = { "/" = ".", "\\s*" = "" }
    }

    // Configuration that controls the generation of tag values
    tag = {
      // A list of regex replacements to apply to the results of each "rule"
      normalizers = { "/" = ".", "\\s*" = "" }
    }


    # Subscription patterns used to select which metrics will be pushed to OpenTSDB. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    subscriptions {
      histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
    }

  }

  modules {
    kamon-opentsdb {
      requires-aspectj = no
      auto-start = yes
      extension-class = "kamon.opentsdb.OpenTSDB"
    }
  }
}
